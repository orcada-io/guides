"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[552],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>c});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),p=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(r),c=n,h=m["".concat(i,".").concat(c)]||m[c]||d[c]||l;return r?a.createElement(h,s(s({ref:t},u),{},{components:r})):a.createElement(h,s({ref:t},u))}));function c(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,s=new Array(l);s[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:n,s[1]=o;for(var p=2;p<l;p++)s[p]=r[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2850:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const l={sidebar_position:2},s="Add zram",o={unversionedId:"stake-pool/bare-metal-server/server-setup/add-zram",id:"stake-pool/bare-metal-server/server-setup/add-zram",title:"Add zram",description:"What is zram?",source:"@site/docs/stake-pool/bare-metal-server/server-setup/add-zram.md",sourceDirName:"stake-pool/bare-metal-server/server-setup",slug:"/stake-pool/bare-metal-server/server-setup/add-zram",permalink:"/guides/stake-pool/bare-metal-server/server-setup/add-zram",draft:!1,editUrl:"https://github.com/orcada-io/guides/edit/master/docs/stake-pool/bare-metal-server/server-setup/add-zram.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Server Setup",permalink:"/guides/category/server-setup"},next:{title:"Add chrony",permalink:"/guides/stake-pool/bare-metal-server/server-setup/add-chrony"}},i={},p=[{value:"What is zram?",id:"what-is-zram",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Install zram",id:"install-zram",level:2},{value:"Useful commands",id:"useful-commands",level:3},{value:"Resources",id:"resources",level:3}],u={toc:p};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"add-zram"},"Add zram"),(0,n.kt)("h2",{id:"what-is-zram"},"What is zram?"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},'zram, formerly called compcache, is a Linux kernel module for creating a compressed block device in RAM, i.e., a RAM\ndisk, but with on-the-fly "disk" compression. The block device created with zram can then be used for swap or as\ngeneral-purpose RAM disk. - Wikipedia')),(0,n.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,n.kt)("p",null,"Disable the Raspberry Pi OS swapfile:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"sudo systemctl disable dphys-swapfile.service\n")),(0,n.kt)("h2",{id:"install-zram"},"Install zram"),(0,n.kt)("p",null,"Install the zram tools:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"sudo apt install -y zram-tools\n")),(0,n.kt)("p",null,"Open ",(0,n.kt)("inlineCode",{parentName:"p"},"/etc/default/zramswap"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"sudo nano /etc/default/zramswap\n")),(0,n.kt)("p",null,"And update it as follows:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"# Compression algorithm selection\n# speed: lz4 > zstd > lzo\n# compression: zstd > lzo > lz4\n# This is not inclusive of all that is available in latest kernels\n# See /sys/block/zram0/comp_algorithm (when zram module is loaded) to see\n# what is currently set and available for your kernel[1]\n# [1]  https://github.com/torvalds/linux/blob/master/Documentation/blockdev/zram.txt#L86\n# ALGO=lz4\n\n# Specifies the amount of RAM that should be used for zram\n# based on a percentage the total amount of available memory\n# This takes precedence and overrides SIZE below\nPERCENT=150\n\n# Specifies a static amount of RAM that should be used for\n# the ZRAM devices, this is in MiB\n# SIZE=256\n\n# Specifies the priority for the swap devices, see swapon(2)\n# for more details. Higher number = higher priority\n# This should probably be higher than hdd/ssd swaps.\n# PRIORITY=100\n")),(0,n.kt)("p",null,"Then save (Ctrl+O) and exit (Ctrl+X) nano."),(0,n.kt)("p",null,"Reload zram:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"sudo systemctl reload zramswap.service\n")),(0,n.kt)("h3",{id:"useful-commands"},"Useful commands"),(0,n.kt)("p",null,"You can use the ",(0,n.kt)("a",{href:"https://manpages.debian.org/bullseye/util-linux/zramctl.8.en.html",target:"_blank"},"zramctl"),"\ncommand to list the zram devices present and their status:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"sudo zramctl\n")),(0,n.kt)("p",null,"You should see something like:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"NAME       ALGORITHM DISKSIZE  DATA COMPR TOTAL STREAMS MOUNTPOINT\n/dev/zram0 lz4          11.4G  6.8G  4.1G  4.4G       4 [SWAP]\n")),(0,n.kt)("p",null,"Run the following command to check your memory usage:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"free -h\n")),(0,n.kt)("p",null,"You should see something like:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"               total        used        free      shared  buff/cache   available\nMem:           7.6Gi       7.4Gi        94Mi          0B       159Mi       132Mi\nSwap:           11Gi       8.1Gi       3.4Gi\n")),(0,n.kt)("h3",{id:"resources"},"Resources"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Debian wiki: ",(0,n.kt)("a",{parentName:"li",href:"https://wiki.debian.org/ZRam"},"zram")),(0,n.kt)("li",{parentName:"ul"},"Hayden James blog: ",(0,n.kt)("a",{parentName:"li",href:"https://haydenjames.io/linux-performance-almost-always-add-swap-space/"},"Linux Performance: Why You Should Almost Always Add Swap Space")),(0,n.kt)("li",{parentName:"ul"},"Hayden James blog: ",(0,n.kt)("a",{parentName:"li",href:"https://haydenjames.io/linux-performance-almost-always-add-swap-part2-zram/"},"Linux Performance: Almost Always Add Swap. Part 2: ZRAM"))))}d.isMDXComponent=!0}}]);