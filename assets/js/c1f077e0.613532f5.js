"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8657],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=p(n),k=o,m=u["".concat(i,".").concat(k)]||u[k]||s[k]||a;return n?r.createElement(m,l(l({ref:t},d),{},{components:n})):r.createElement(m,l({ref:t},d))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5411:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>s,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:3},l="Docker",c={unversionedId:"honeycomb-lx2/stake-pool/docker",id:"honeycomb-lx2/stake-pool/docker",title:"Docker",description:"Install Docker",source:"@site/docs/honeycomb-lx2/stake-pool/docker.md",sourceDirName:"honeycomb-lx2/stake-pool",slug:"/honeycomb-lx2/stake-pool/docker",permalink:"/guides/honeycomb-lx2/stake-pool/docker",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Troubleshooting",permalink:"/guides/honeycomb-lx2/stake-pool/bare-metal-server/troubleshooting"},next:{title:"Relay Node",permalink:"/guides/honeycomb-lx2/stake-pool/relay-node"}},i={},p=[{value:"Install Docker",id:"install-docker",level:2},{value:"Docker Image",id:"docker-image",level:2},{value:"Clone the project",id:"clone-the-project",level:3},{value:"Build the project",id:"build-the-project",level:3}],d={toc:p};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker"},"Docker"),(0,o.kt)("h2",{id:"install-docker"},"Install Docker"),(0,o.kt)("p",null,"Before you install Docker Engine for the first time on a new host machine, you need to set up the Docker repository.\nAfterward, you can install and update Docker from the repository."),(0,o.kt)("p",null,"Follow the step-by-step guide in the Docker docs to install Docker Engine using the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/debian/#install-using-the-repository"},"apt repository"),"."),(0,o.kt)("h2",{id:"docker-image"},"Docker Image"),(0,o.kt)("p",null,"The Cardano Node Docker Image contains all the files you need to run a Cardano node on an arm64 device.\nThe node can be configured to run as a relay node or as a core (block producing) node."),(0,o.kt)("h3",{id:"clone-the-project"},"Clone the project"),(0,o.kt)("p",null,"Change the current working directory to the location where you want the cloned directory to be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"mkdir docker\ncd docker\n")),(0,o.kt)("p",null,"Clone the project by running the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git clone ssh://git@gitlab:3001/docker/cardano-node.git\n")),(0,o.kt)("p",null,"We can visualise the project structure using the ",(0,o.kt)("strong",{parentName:"p"},"tree")," command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo apt install tree\n")),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"tree -da\n")),(0,o.kt)("p",null,"You should see something like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 docker\n\u2502\xa0\xa0 \u251c\u2500\u2500 cardano-node\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 build\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502   \u251c\u2500\u2500 cardano-node.dockerfile\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502   \u2514\u2500\u2500 entrypoint.sh\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502   \u2514\u2500\u2500 submit-api.sh\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 files\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \xa0\xa0 \xa0\u2514\u2500\u2500 topology.json\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 run\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u251c\u2500\u2500 core-node-1\n\u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 .keys\n\u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 usb-transfer\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 relay-node-1\n\u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 .keys\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 relay-node-2\n\u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 .keys\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 relay-node-3\n\u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 .keys\n\u2514\u2500\u2500 tmp\n")),(0,o.kt)("h3",{id:"build-the-project"},"Build the project"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd cardano-node/build\nsudo docker build -t cardano-node:8.1.2 -f cardano-node.dockerfile .\n")))}s.isMDXComponent=!0}}]);