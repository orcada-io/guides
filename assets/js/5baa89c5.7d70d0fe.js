"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[471],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>O});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),O=o,m=u["".concat(p,".").concat(O)]||u[O]||s[O]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function O(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8943:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:3},i="Relay Node",l={unversionedId:"stake-pool/relay-node",id:"stake-pool/relay-node",title:"Relay Node",description:"Configuration",source:"@site/docs/stake-pool/relay-node.md",sourceDirName:"stake-pool",slug:"/stake-pool/relay-node",permalink:"/guides/stake-pool/relay-node",draft:!1,editUrl:"https://github.com/orcada-io/guides/edit/master/docs/stake-pool/relay-node.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Hardening",permalink:"/guides/stake-pool/bare-metal-server/server-setup/hardening"}},p={},d=[{value:"Configuration",id:"configuration",level:2},{value:"Environment",id:"environment",level:2}],c={toc:d};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"relay-node"},"Relay Node"),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Create the directories for the project:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"mkdir -p ${HOME}/.local/bin && \\\nmkdir -p ${HOME}/pi-pool/files  && \\\nmkdir -p ${HOME}/pi-pool/logs && \\\nmkdir -p ${HOME}/pi-pool/scripts && \\\nmkdir ${HOME}/git && \\\nmkdir ${HOME}/tmp\n")),(0,o.kt)("p",null,"We can visualise the project structure using the ",(0,o.kt)("strong",{parentName:"p"},"tree")," command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo apt install tree\n")),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"tree -da\n")),(0,o.kt)("p",null,"You should see something like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 git\n\u251c\u2500\u2500 .local\n\u2502\xa0\xa0 \u251c\u2500\u2500 bin\n\u251c\u2500\u2500 pi-pool\n\u2502\xa0\xa0 \u251c\u2500\u2500 files\n\u2502\xa0\xa0 \u251c\u2500\u2500 logs\n\u2502\xa0\xa0 \u2514\u2500\u2500 scripts\n\u2514\u2500\u2500 tmp\n")),(0,o.kt)("h2",{id:"environment"},"Environment"),(0,o.kt)("p",null,"Create a configuration file that will contain all the ",(0,o.kt)("strong",{parentName:"p"},"Cardano Node")," variables and settings:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo nano .adaenv\n")),(0,o.kt)("p",null,"And update it as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"NODE_CONFIG=mainnet\n")),(0,o.kt)("p",null,"Then save (Ctrl+O) and exit (Ctrl+X) nano."),(0,o.kt)("p",null,"Source the file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"source ${HOME}/.adaenv\n")),(0,o.kt)("p",null,"We want the ",(0,o.kt)("inlineCode",{parentName:"p"},".bashrc")," file to source the Cardano Node variables and settings:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"echo . ~/.adaenv >> ${HOME}/.bashrc\n")),(0,o.kt)("p",null,"Update ",(0,o.kt)("inlineCode",{parentName:"p"},".adaenv")," file, add ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.local/bin")," to the $PATH and create some bash variables:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd .local/bin; echo \"export PATH=\\\"$PWD:\\$PATH\\\"\" >> $HOME/.adaenv && \\\necho export NODE_HOME=${HOME}/pi-pool >> ${HOME}/.adaenv && \\\necho export NODE_PORT=5011 >> ${HOME}/.adaenv && \\\necho export NODE_FILES=${HOME}/pi-pool/files >> ${HOME}/.adaenv && \\\necho export TOPOLOGY='${NODE_FILES}'/'${NODE_CONFIG}'-topology.json >> ${HOME}/.adaenv && \\\necho export DB_PATH='${NODE_HOME}'/db >> ${HOME}/.adaenv && \\\necho export CONFIG='${NODE_FILES}'/'${NODE_CONFIG}'-config.json >> ${HOME}/.adaenv && \\\necho export NODE_BUILD_NUM=$(curl https://hydra.iohk.io/job/Cardano/iohk-nix/cardano-deployment/latest-finished/download/1/index.html | grep -e \"build\" | sed 's/.*build\\/\\([0-9]*\\)\\/download.*/\\1/g') >> ${HOME}/.adaenv && \\\necho export CARDANO_NODE_SOCKET_PATH=\"${HOME}/pi-pool/db/socket\" >> ${HOME}/.adaenv\n")),(0,o.kt)("p",null,"Check the updated ",(0,o.kt)("inlineCode",{parentName:"p"},".adaenv")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cat ${HOME}/.adaenv\n")),(0,o.kt)("p",null,"You should see something like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'NODE_CONFIG=mainnet\nexport PATH="/home/ada/.local/bin:$PATH"\nexport NODE_HOME=/home/ada/pi-pool\nexport NODE_PORT=5011\nexport NODE_FILES=/home/ada/pi-pool/files\nexport TOPOLOGY=${NODE_FILES}/${NODE_CONFIG}-topology.json\nexport DB_PATH=${NODE_HOME}/db\nexport CONFIG=${NODE_FILES}/${NODE_CONFIG}-config.json\nexport NODE_BUILD_NUM=14528927\nexport CARDANO_NODE_SOCKET_PATH=/home/ada/pi-pool/db/socket\n')),(0,o.kt)("p",null,"Source the updated files:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"source ${HOME}/.bashrc; source ${HOME}/.adaenv\n")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"It is important to remember that if you change a variable or a setting in the ",(0,o.kt)("inlineCode",{parentName:"p"},".adaenv")," configuration file then you must\nreinitialise the values by sourcing the file.")))}s.isMDXComponent=!0}}]);