"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8657],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>k});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=p(r),k=o,m=u["".concat(i,".").concat(k)]||u[k]||s[k]||l;return r?n.createElement(m,a(a({ref:t},d),{},{components:r})):n.createElement(m,a({ref:t},d))}));function k(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=u;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<l;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},5411:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>s,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const l={sidebar_position:3},a="Docker",c={unversionedId:"honeycomb-lx2/stake-pool/docker",id:"honeycomb-lx2/stake-pool/docker",title:"Docker",description:"Install Docker",source:"@site/docs/honeycomb-lx2/stake-pool/docker.md",sourceDirName:"honeycomb-lx2/stake-pool",slug:"/honeycomb-lx2/stake-pool/docker",permalink:"/guides/honeycomb-lx2/stake-pool/docker",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Troubleshooting",permalink:"/guides/honeycomb-lx2/stake-pool/bare-metal-server/troubleshooting"},next:{title:"Relay Node",permalink:"/guides/honeycomb-lx2/stake-pool/relay-node"}},i={},p=[{value:"Install Docker",id:"install-docker",level:2},{value:"Docker Image",id:"docker-image",level:2},{value:"Clone the project",id:"clone-the-project",level:3},{value:"Build the project",id:"build-the-project",level:3}],d={toc:p};function s(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"docker"},"Docker"),(0,o.kt)("h2",{id:"install-docker"},"Install Docker"),(0,o.kt)("p",null,"Before you install Docker Engine for the first time on a new host machine, you need to set up the Docker repository.\nAfterward, you can install and update Docker from the repository."),(0,o.kt)("p",null,"Follow the step-by-step guide in the Docker docs to install Docker Engine using the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.docker.com/engine/install/debian/#install-using-the-repository"},"apt repository"),"."),(0,o.kt)("h2",{id:"docker-image"},"Docker Image"),(0,o.kt)("p",null,"The Cardano Node Docker Image contains all the files you need to run a Cardano node on an arm64 device.\nThe node can be configured to run as a relay node or a core (block producing) node."),(0,o.kt)("h3",{id:"clone-the-project"},"Clone the project"),(0,o.kt)("p",null,"Change the current working directory to the location where you want the cloned directory to be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"mkdir docker\ncd docker\n")),(0,o.kt)("p",null,"Clone the project by running the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git clone ssh://git@gitlab:3001/docker/cardano-node.git\n")),(0,o.kt)("p",null,"We can visualise the project structure using the ",(0,o.kt)("strong",{parentName:"p"},"tree")," command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo apt install tree\n")),(0,o.kt)("p",null,"For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"tree -da\n")),(0,o.kt)("p",null,"You should see something like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},".\n\u251c\u2500\u2500 docker\n\u2502\xa0\xa0 \u251c\u2500\u2500 cardano-node\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 build\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 files\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 run\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u251c\u2500\u2500 core-node-1\n\u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 .keys\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 relay-node-3\n\u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 .keys\n\u2514\u2500\u2500 usb-transfer\n")),(0,o.kt)("h3",{id:"build-the-project"},"Build the project"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd cardano-node/build\nsudo docker build -t cardano-node:8.1.2 -f cardano-node.dockerfile .\n")))}s.isMDXComponent=!0}}]);