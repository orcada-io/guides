"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[214],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>y});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),s=u(r),y=o,m=s["".concat(c,".").concat(y)]||s[y]||d[y]||l;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,i=new Array(l);i[0]=s;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var u=2;u<l;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},2604:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>a,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const l={sidebar_position:5},i="Relay Node",a={unversionedId:"honeycomb-lx2/stake-pool/relay-node",id:"honeycomb-lx2/stake-pool/relay-node",title:"Relay Node",description:"Prerequisites",source:"@site/docs/honeycomb-lx2/stake-pool/relay-node.md",sourceDirName:"honeycomb-lx2/stake-pool",slug:"/honeycomb-lx2/stake-pool/relay-node",permalink:"/guides/honeycomb-lx2/stake-pool/relay-node",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Install Docker",permalink:"/guides/honeycomb-lx2/stake-pool/bare-metal-server/install-docker"},next:{title:"Raspberry Pi Guide",permalink:"/guides/category/raspberry-pi-guide"}},c={},u=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"HoneyComb LX2",id:"honeycomb-lx2",level:2},{value:"Set up your Development Environment",id:"set-up-your-development-environment",level:3},{value:"Sign in to the device",id:"sign-in-to-the-device",level:3},{value:"Clone the project",id:"clone-the-project",level:3},{value:"Docker build",id:"docker-build",level:3}],p={toc:u};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"relay-node"},"Relay Node"),(0,o.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("p",null,"You must first complete the steps in the Server Setup and the Install Docker guides."),(0,o.kt)("h2",{id:"honeycomb-lx2"},"HoneyComb LX2"),(0,o.kt)("h3",{id:"set-up-your-development-environment"},"Set up your Development Environment"),(0,o.kt)("p",null,"You need to set up your development environment before you can do anything."),(0,o.kt)("p",null,"What you need:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"git"),(0,o.kt)("li",{parentName:"ul"},"Docker")),(0,o.kt)("h3",{id:"sign-in-to-the-device"},"Sign in to the device"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ssh ada@192.168.101.13\n")),(0,o.kt)("h3",{id:"clone-the-project"},"Clone the project"),(0,o.kt)("p",null,"Change the current working directory to the location where you want the cloned directory to be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd ~/docker\n")),(0,o.kt)("p",null,"Clone the project by running the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"git clone ssh://git@gitlab:3001/docker/cardano-node.git\n# git fetch --all\n# git reset --hard origin/main\ngit pull\n")),(0,o.kt)("h3",{id:"docker-build"},"Docker build"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cd cardano-node/build\nsudo docker system prune\nsudo docker build -t cardano-node:8.1.2-1 -f cardano-node.dockerfile .\n")))}d.isMDXComponent=!0}}]);