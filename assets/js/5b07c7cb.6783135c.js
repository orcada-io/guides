"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[861],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5997:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:4},i="Hardening",s={unversionedId:"raspberry-pi/stake-pool/bare-metal-server/server-setup/hardening",id:"raspberry-pi/stake-pool/bare-metal-server/server-setup/hardening",title:"Hardening",description:"Configure the operating system",source:"@site/docs/raspberry-pi/stake-pool/bare-metal-server/server-setup/hardening.md",sourceDirName:"raspberry-pi/stake-pool/bare-metal-server/server-setup",slug:"/raspberry-pi/stake-pool/bare-metal-server/server-setup/hardening",permalink:"/guides/raspberry-pi/stake-pool/bare-metal-server/server-setup/hardening",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Add chrony",permalink:"/guides/raspberry-pi/stake-pool/bare-metal-server/server-setup/add-chrony"},next:{title:"Troubleshooting",permalink:"/guides/raspberry-pi/stake-pool/bare-metal-server/troubleshooting"}},l={},p=[{value:"Configure the operating system",id:"configure-the-operating-system",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Disable the root account",id:"disable-the-root-account",level:2},{value:"Disable wireless services",id:"disable-wireless-services",level:2},{value:"System updates",id:"system-updates",level:2},{value:"Enable automatic security updates",id:"enable-automatic-security-updates",level:3},{value:"Secure shared memory",id:"secure-shared-memory",level:2},{value:"Increase the open file limit for $USER (ada)",id:"increase-the-open-file-limit-for-user-ada",level:2},{value:"Optimise performance and security",id:"optimise-performance-and-security",level:2},{value:"Resources",id:"resources",level:3}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hardening"},"Hardening"),(0,a.kt)("h2",{id:"configure-the-operating-system"},"Configure the operating system"),(0,a.kt)("p",null,"To reduce the attack surface of the server we need to harden the default Operating System (OS) installation."),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Raspberry Pi OS Lite 64 bit (a port of Debian Bullseye with no Desktop environment)")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:")," This guide assumes you are using ",(0,a.kt)("a",{href:"https://www.nano-editor.org/",target:"_blank"},"nano")," (the Linux Command Line Text Editor)."),(0,a.kt)("h2",{id:"disable-the-root-account"},"Disable the root account"),(0,a.kt)("p",null,"Use SSH to connect to the device."),(0,a.kt)("p",null,"Disable the root account:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo passwd -l root\n")),(0,a.kt)("p",null,"You should see something like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"passwd: password expiry information changed.\n")),(0,a.kt)("h2",{id:"disable-wireless-services"},"Disable wireless services"),(0,a.kt)("p",null,"Open ",(0,a.kt)("inlineCode",{parentName:"p"},"/boot/config.txt"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo nano /boot/config.txt\n")),(0,a.kt)("p",null,"Scroll down to the end of the file and add the following lines below the ",(0,a.kt)("inlineCode",{parentName:"p"},"[all]")," placeholder:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"...\n\n[all]\n# Disable wireless services\ndtoverlay=disable-wifi\ndtoverlay=disable-bt\n")),(0,a.kt)("h2",{id:"system-updates"},"System updates"),(0,a.kt)("p",null,"Keep your system up to date:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo apt update\nsudo apt full-upgrade -y\nsudo apt-get autoremove\nsudo apt-get autoclean\n")),(0,a.kt)("h3",{id:"enable-automatic-security-updates"},"Enable automatic security updates"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo apt update && sudo apt install -y unattended-upgrades\nsudo dpkg-reconfigure -plow unattended-upgrades\n")),(0,a.kt)("h2",{id:"secure-shared-memory"},"Secure shared memory"),(0,a.kt)("p",null,"Shared memory can be used in an attack against a running service. To make it more secure, we mount shared memory as\nread only. "),(0,a.kt)("p",null,"Open ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/fstab"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo nano /etc/fstab\n")),(0,a.kt)("p",null,"Add the following line to the bottom of the file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"tmpfs    /run/shm    tmpfs    ro,noexec,nosuid    0 0\n")),(0,a.kt)("p",null,"Then save (Ctrl+O) and exit (Ctrl+X) nano."),(0,a.kt)("h2",{id:"increase-the-open-file-limit-for-user-ada"},"Increase the open file limit for $USER (ada)"),(0,a.kt)("p",null,"Add a couple of lines to the bottom of the ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/security/limits.conf")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo bash -c \"echo -e '${USER} soft nofile 800000\\n${USER} hard nofile 1048576\\n' >> /etc/security/limits.conf\"\n")),(0,a.kt)("p",null,"Check that the lines were added to the bottom of the file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat /etc/security/limits.conf\n")),(0,a.kt)("p",null,"You should see something like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"...\n\n# End of file\nada soft nofile 800000\nada hard nofile 1048576\n")),(0,a.kt)("h2",{id:"optimise-performance-and-security"},"Optimise performance and security"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/sysctl.conf")," file is used to configure kernel parameters (tunables) at runtime. Linux reads and applies the\nsettings from this file."),(0,a.kt)("p",null,"Open ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/sysctl.conf"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo nano /etc/sysctl.conf\n")),(0,a.kt)("p",null,"Add the following lines to the bottom of the file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"## Pi Node ##\n\n# Disable IPv6\nnet.ipv6.conf.all.disable_ipv6 = 1\nnet.ipv6.conf.default.disable_ipv6 = 1\n\n# Increase the maximum number of open files\nfs.file-max = 10000000\nfs.nr_open = 10000000\n\n# IP forwarding\nnet.ipv4.ip_forward = 0\n\n# Ignore send redirects\nnet.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.send_redirects = 0\n\n# Ignore ICMP redirects\nnet.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.default.accept_redirects = 0\n\n# Log Martians\nnet.ipv4.icmp_ignore_bogus_error_responses = 1\n\n# Block SYN attacks\nnet.ipv4.tcp_syncookies = 1\nnet.ipv4.tcp_max_syn_backlog = 2048\nnet.ipv4.tcp_synack_retries = 3\n# net.ipv4.tcp_syn_retries = 5\nnet.ipv4.netfilter.ip_conntrack_tcp_timeout_syn_recv = 45\n\n# In-progress tasks\nnet.ipv4.tcp_keepalive_time = 240\nnet.ipv4.tcp_keepalive_intvl = 4\nnet.ipv4.tcp_keepalive_probes = 5\n\n# In rare occasions, it may be beneficial to reboot your server reboot if it runs out of memory.\n# This simple solution can avoid you hours of down time. The vm.panic_on_oom=1 line enables panic\n# on OOM; the kernel.panic=10 line tells the kernel to reboot ten seconds after panicking.\nvm.panic_on_oom = 1\nkernel.panic = 10\n\n# Use Google's congestion control algorithm\nnet.core.default_qdisc = fq\nnet.ipv4.tcp_congestion_control = bbr\n\n# ZRAM\n# Delay the inevitable, running out of memory. This is done by increasing the kernel\u2019s cache pressure.\n# Start preparing for being out of memory sooner by increasing the tendency of your Raspberry Pi to swap. \n# However, swap will now be stored via much faster ZRAM.\n# vm.vfs_cache_pressure=500\n# vm.swappiness=100\n# vm.dirty_background_ratio=1\n# vm.dirty_ratio=50\n# vm.min_free_kbytes=512000\n# vm.overcommit_memory=2\n")),(0,a.kt)("p",null,"Then save (Ctrl+O) and exit (Ctrl+X) nano."),(0,a.kt)("p",null,"Apply the new settings:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo sysctl -p\n")),(0,a.kt)("h3",{id:"resources"},"Resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Book of Zeus: ",(0,a.kt)("a",{parentName:"li",href:"https://bookofzeus.com/harden-ubuntu/hardening/sysctl-conf/"},"Harden Ubuntu")),(0,a.kt)("li",{parentName:"ul"},"Debian wiki: ",(0,a.kt)("a",{parentName:"li",href:"https://wiki.debian.org/ZRam"},"zram")),(0,a.kt)("li",{parentName:"ul"},"Hayden James blog: ",(0,a.kt)("a",{parentName:"li",href:"https://haydenjames.io/linux-performance-almost-always-add-swap-space/"},"Linux Performance: Why You Should Almost Always Add Swap Space")),(0,a.kt)("li",{parentName:"ul"},"Hayden James blog: ",(0,a.kt)("a",{parentName:"li",href:"https://haydenjames.io/linux-performance-almost-always-add-swap-part2-zram/"},"Linux Performance: Almost Always Add Swap. Part 2: ZRAM"))))}c.isMDXComponent=!0}}]);