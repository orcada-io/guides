"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[284],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,b=c["".concat(i,".").concat(m)]||c[m]||d[m]||o;return r?n.createElement(b,s(s({ref:t},u),{},{components:r})):n.createElement(b,s({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=c;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},3178:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:2},s="Add ZRAM",l={unversionedId:"stake-pool/bare-metal-server/server-setup/add-ZRAM",id:"stake-pool/bare-metal-server/server-setup/add-ZRAM",title:"Add ZRAM",description:"Prerequisites",source:"@site/docs/stake-pool/bare-metal-server/server-setup/add-ZRAM.md",sourceDirName:"stake-pool/bare-metal-server/server-setup",slug:"/stake-pool/bare-metal-server/server-setup/add-ZRAM",permalink:"/guides/stake-pool/bare-metal-server/server-setup/add-ZRAM",draft:!1,editUrl:"https://github.com/orcada-io/guides/edit/master/docs/stake-pool/bare-metal-server/server-setup/add-ZRAM.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Server Setup",permalink:"/guides/category/server-setup"},next:{title:"Add chrony",permalink:"/guides/stake-pool/bare-metal-server/server-setup/add-chrony"}},i={},p=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Install ZRAM",id:"install-zram",level:2},{value:"Resources",id:"resources",level:3}],u={toc:p};function d(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"add-zram"},"Add ZRAM"),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"Disable the Raspberry Pi OS swapfile"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo systemctl disable dphys-swapfile.service\n")),(0,a.kt)("h2",{id:"install-zram"},"Install ZRAM"),(0,a.kt)("p",null,"Install the ZRAM tools:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo apt install -y zram-tools\n")),(0,a.kt)("p",null,"Open ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/default/zramswap"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo nano /etc/default/zramswap\n")),(0,a.kt)("p",null,"And update it as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"# Compression algorithm selection\n# speed: lz4 > zstd > lzo\n# compression: zstd > lzo > lz4\n# This is not inclusive of all that is available in latest kernels\n# See /sys/block/zram0/comp_algorithm (when zram module is loaded) to see\n# what is currently set and available for your kernel[1]\n# [1]  https://github.com/torvalds/linux/blob/master/Documentation/blockdev/zram.txt#L86\n# ALGO=lz4\n\n# Specifies the amount of RAM that should be used for zram\n# based on a percentage the total amount of available memory\n# This takes precedence and overrides SIZE below\nPERCENT=150\n\n# Specifies a static amount of RAM that should be used for\n# the ZRAM devices, this is in MiB\n# SIZE=256\n\n# Specifies the priority for the swap devices, see swapon(2)\n# for more details. Higher number = higher priority\n# This should probably be higher than hdd/ssd swaps.\n# PRIORITY=100\n")),(0,a.kt)("p",null,"Then save (Ctrl+O) and exit (Ctrl+X) nano."),(0,a.kt)("p",null,"Reboot the RPi:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo reboot\n")),(0,a.kt)("h3",{id:"resources"},"Resources"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Hayden James blog: ",(0,a.kt)("a",{parentName:"li",href:"https://haydenjames.io/raspberry-pi-performance-add-zram-kernel-parameters/"},"ZRAM"))))}d.isMDXComponent=!0}}]);